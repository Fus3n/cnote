<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>